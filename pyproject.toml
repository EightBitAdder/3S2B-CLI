[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "three-s-two-b"
version = "1.0.0"
description = "CLI and library for 3S2B algorithm and Molecular Fragment Database analysis"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [
    { name = "Jesse Fraser" },
    { name = "Arun Moorthy" }
]
keywords = ["chemistry", "mass-spectrometry", "molecular-fragments", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed",
]
dependencies = [
    "numpy>=2.1.2",
    "pandas>=2.2.3", 
    "matplotlib>=3.9.2",
    "IsoSpecPy>=2.2.2",
    "rdkit>=2024.3.5",
    "click>=8.1.8",
    "textual>=0.57.1",
    "tqdm>=4.66",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "black>=23.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

[project.scripts]
"3s2b" = "three_s_two_b.cli:cli"
"make-db" = "three_s_two_b.db.make:make_db"

[project.urls]
Homepage = "https://github.com/EightBitAdder/3S2B-CLI"
Repository = "https://github.com/EightBitAdder/3S2B-CLI"
Documentation = "https://chemrxiv.org/engage/chemrxiv/article-details/685aa01d1a8f9bdab548c2f4"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Linting and formatting configuration
[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "S",   # bandit
    "B",   # flake8-bugbear
    "PL",  # pylint
    "Q",   # flake8-quotes
    "RUF", # ruff-specific
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "S101",  # use of assert
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S", "PL"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
strict_optional = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[[tool.mypy.overrides]]
module = [
    "rdkit.*",
    "IsoSpecPy.*",
    "textual.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=three_s_two_b",
    "--cov-report=term-missing",
    "--cov-report=html",
]